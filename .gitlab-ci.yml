image: gitlab/dind

services:
  - docker:19.03.12-dind


stages:
  - build
  - test


before_script:
- 'which ssh-agent || ( apt-get install -qq openssh-client )'
- eval $(ssh-agent -s)
- ssh-add <(echo "$SSH_KEY")
- mkdir -p ~/.ssh
- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'



variables:
  SECRET_KEY: '$SECRET_KEY'
  DEBUG: '$DEBUG'
  DJANGO_ALLOWED_HOSTS: '$DJANGO_ALLOWED_HOSTS'
  EMAIL_HOST: '$EMAIL_HOST'
  EMAIL_HOST_USER: '$EMAIL_HOST_USER'
  EMAIL_HOST_PASSWORD: '$EMAIL_HOST_PASSWORD'
  EMAIL_PORT: '$EMAIL_PORT'
  EMAIL_USE_TLS: '$EMAIL_USE_TLS'
  FROM_EMAIL: '$FROM_EMAIL'
  DB_ENGINE: '$DB_ENGINE'
  POSTGRES_DB_NAME: '$POSTGRES_DB_NAME'
  POSTGRES_USER_NAME: '$POSTGRES_USER_NAME'
  POSTGRES_PASSWORD: '$POSTGRES_PASSWORD'
  POSTGRES_HOST: '$POSTGRES_HOST'
  POSTGRES_PORT: '$POSTGRES_PORT'
  CELERY_BROKER: '$CELERY_BROKER'
  CELERY_BACKEND: '$CELERY_BACKEND'
  REDIS_HOST: '$REDIS_HOST'
  REDIS_PORT: '$REDIS_PORT'


build:
  stage: build
  script:
    - docker/compose:latest -f docker-compose.yaml build

test:
  stage: test
  script:
    - docker/compose:latest run web-1 python manage.py test

deploy:
  stage: deploy
  only:
    - master
  script:
    - docker/compose:latest down
    - docker/compose:latest -f docker-compose.yml -f docker-compose.prod.yml up -d
